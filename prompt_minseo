우리는 4명이 함께 “인스타그램과 유사한 앱”의 MVP를 만듭니다.
범위: 회원가입/로그인, 피드 목록, 새 글 작성(텍스트+이미지), 좋아요/댓글, 로컬 개발서버만 운영합니다.

[제약 & 기술 스택]
- 프론트: React
- 백엔드: FastAPI

[원하는 출력 형식]
1) “폴더/파일 구조” 제안 (frontend/, backend/ 세부 파일 포함)  
2) “API 계약서(min spec)” 작성  
   - POST /auth/signup, POST /auth/login
   - GET/POST /posts, GET /posts/{id}, POST/DELETE /posts/{id}/like, POST /posts/{id}/comments
   - 응답 필드 예시 포함(샘플 JSON)

* 폴더/파일 구조 제안*
instagram-clone/
│
├── backend/                # FastAPI 서버
│   ├── main.py             # FastAPI 실행 진입점
│   ├── database.py         # DB 연결 (SQLAlchemy)
│   ├── models.py           # User, Post, Comment, Like 등 DB 모델
│   ├── schemas.py          # 요청/응답 Pydantic 스키마
│   ├── crud.py             # DB 접근 함수
│   ├── auth.py             # JWT 로그인/회원가입
│   └── routers/            # API 라우터
│       ├── users.py
│       ├── posts.py
│       ├── comments.py
│       └── likes.py
│
├── frontend/               # React (Vite 기반)
│   ├── src/
│   │   ├── App.jsx         # 라우팅/전체 레이아웃
│   │   ├── main.jsx        # React 진입점
│   │   ├── index.css
│   │   ├── pages/          # 화면 단위
│   │   │   ├── Login.jsx
│   │   │   ├── Register.jsx
│   │   │   ├── Feed.jsx
│   │   │   ├── Upload.jsx
│   │   │   └── Profile.jsx
│   │   └── components/     # 재사용 컴포넌트
│   │       ├── Navbar.jsx
│   │       ├── PostCard.jsx
│   │       └── CommentBox.jsx
│   ├── App.css
│   ├── index.html
│   └── vite.config.js
│
└── README.md
